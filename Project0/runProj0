#!/bin/bash

# runProj0 runs the Project 0 - Simple OpenMP experiment program with
# numThreads = 1 and 4. It uses the output (performance and running times)
# to calculate the speedup and parallel fraction from 1 thread to 4.

trap "rm -f *$$*; echo; echo 'CTRL-C received, exiting'; exit 1" INT HUP TERM

tempOneLine="tempOneLine$$"
echo "Running experiment with 1 thread"
g++ -DNUMTHREADS=1 proj0.cpp -o proj0 -lm -fopenmp
./proj0 > $tempOneLine
perf1=$(cut -f 1 $tempOneLine)
time1=$(cut -f 2 $tempOneLine)
echo -e "MegaMults / sec\t$perf1\tRunning time\t$time1\n"

tempFourLine="tempFourLine$$"
echo "Running experiment with 4 threads"
g++ -DNUMTHREADS=4 proj0.cpp -o proj0 -lm -fopenmp
./proj0 > $tempFourLine
perf4=$(cut -f 1 $tempFourLine)
time4=$(cut -f 2 $tempFourLine)
echo -e "MegaMults / sec\t$perf4\tRunning time\t$time4\n"

# Calculate speedup
speedup=$(echo -e "$time1 / $time4" | bc -l)
printf "Speedup: %0.4lf\n\n" $speedup

ParFrac=$(echo "(4. / 3.) * (1. - (1. / $speedup) )" | bc -l)
printf "Parallel fraction: %0.4lf\n" $ParFrac

rm -f *$$*
